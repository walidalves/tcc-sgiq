// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using Sgiq.Dados;
using System;

namespace Sgiq.Dados.Migrations
{
    [DbContext(typeof(SGIQContext))]
    [Migration("20171204234244_requisitos")]
    partial class requisitos
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn)
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("Sgiq.Dados.Models.Atividade", b =>
                {
                    b.Property<int>("AtividadeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<DateTime>("DtInicioPrevista")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtTerminoPrevista")
                        .HasColumnType("datetime");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<int>("ProjetoId");

                    b.HasKey("AtividadeId");

                    b.HasIndex("ProjetoId");

                    b.ToTable("Atividade");
                });

            modelBuilder.Entity("Sgiq.Dados.Models.Condicao", b =>
                {
                    b.Property<int>("CondicaoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.HasKey("CondicaoId");

                    b.ToTable("Condicao");
                });

            modelBuilder.Entity("Sgiq.Dados.Models.Papel", b =>
                {
                    b.Property<int>("PapelId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.HasKey("PapelId");

                    b.ToTable("Papel");
                });

            modelBuilder.Entity("Sgiq.Dados.Models.ParteInteressada", b =>
                {
                    b.Property<int>("ParteInteressadaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<string>("Telefone")
                        .HasMaxLength(12);

                    b.HasKey("ParteInteressadaId");

                    b.ToTable("ParteInteressada");
                });

            modelBuilder.Entity("Sgiq.Dados.Models.ParteInteressadaProjeto", b =>
                {
                    b.Property<int>("ProjetoId");

                    b.Property<int>("ParteInteressadaId");

                    b.Property<int>("PapelId");

                    b.HasKey("ProjetoId", "ParteInteressadaId");

                    b.HasAlternateKey("ParteInteressadaId", "ProjetoId");

                    b.HasIndex("PapelId");

                    b.ToTable("ParteInteressadaProjeto");
                });

            modelBuilder.Entity("Sgiq.Dados.Models.Projeto", b =>
                {
                    b.Property<int>("ProjetoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("CustoEstimado");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<DateTime>("DtInicioPrevista")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtTerminoPrevista")
                        .HasColumnType("datetime");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<int>("SituacaoProjetoId");

                    b.HasKey("ProjetoId");

                    b.HasIndex("SituacaoProjetoId");

                    b.ToTable("Projeto");
                });

            modelBuilder.Entity("Sgiq.Dados.Models.Requisito", b =>
                {
                    b.Property<int>("RequisitoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<DateTime>("DtInclusao")
                        .HasColumnType("datetime");

                    b.Property<int>("ProjetoId");

                    b.Property<int>("TipoRequisitoId");

                    b.HasKey("RequisitoId");

                    b.HasIndex("ProjetoId");

                    b.HasIndex("TipoRequisitoId");

                    b.ToTable("Requisito");
                });

            modelBuilder.Entity("Sgiq.Dados.Models.SituacaoProjeto", b =>
                {
                    b.Property<int>("SituacaoProjetoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.HasKey("SituacaoProjetoId");

                    b.ToTable("SituacaoProjeto");
                });

            modelBuilder.Entity("Sgiq.Dados.Models.TipoDado", b =>
                {
                    b.Property<int>("TipoDadoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.HasKey("TipoDadoId");

                    b.ToTable("TipoDado");
                });

            modelBuilder.Entity("Sgiq.Dados.Models.TipoRequisito", b =>
                {
                    b.Property<int>("TipoRequisitoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.HasKey("TipoRequisitoId");

                    b.ToTable("TipoRequisito");
                });

            modelBuilder.Entity("Sgiq.Dados.Models.Atividade", b =>
                {
                    b.HasOne("Sgiq.Dados.Models.Projeto")
                        .WithMany("Atividades")
                        .HasForeignKey("ProjetoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sgiq.Dados.Models.ParteInteressadaProjeto", b =>
                {
                    b.HasOne("Sgiq.Dados.Models.Papel", "Papel")
                        .WithMany("PartesInteressadasProjeto")
                        .HasForeignKey("PapelId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sgiq.Dados.Models.ParteInteressada", "ParteInteressada")
                        .WithMany("PartesInteressadasProjeto")
                        .HasForeignKey("ParteInteressadaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sgiq.Dados.Models.Projeto", "Projeto")
                        .WithMany("PartesInteressadasProjeto")
                        .HasForeignKey("ProjetoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sgiq.Dados.Models.Projeto", b =>
                {
                    b.HasOne("Sgiq.Dados.Models.SituacaoProjeto")
                        .WithMany("Projetos")
                        .HasForeignKey("SituacaoProjetoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Sgiq.Dados.Models.Requisito", b =>
                {
                    b.HasOne("Sgiq.Dados.Models.Projeto")
                        .WithMany("Requisitos")
                        .HasForeignKey("ProjetoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Sgiq.Dados.Models.TipoRequisito")
                        .WithMany("Requisitos")
                        .HasForeignKey("TipoRequisitoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
